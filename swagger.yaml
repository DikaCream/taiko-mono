definitions:
  big.Int:
    type: object
  softblocks.BuildSoftBlockRequestBody:
    properties:
      transactionBatch:
        $ref: "#/definitions/softblocks.TransactionBatch"
    type: object
  softblocks.BuildSoftBlockResponseBody:
    properties:
      blockHeader:
        $ref: "#/definitions/types.Header"
    type: object
  softblocks.RemoveSoftBlocksRequestBody:
    properties:
      newHead:
        type: integer
    type: object
  softblocks.RemoveSoftBlocksResponseBody:
    properties:
      currentHead:
        $ref: "#/definitions/types.Header"
      headsRemoved:
        type: integer
    type: object
  softblocks.TransactionBatch:
    properties:
      anchorBlockID:
        description: AnchorV2 parameters
        type: integer
      anchorStateRoot:
        type: string
      batchId:
        type: integer
      batchType:
        $ref: "#/definitions/softblocks.TransactionBatchMarker"
      blockId:
        type: integer
      coinbase:
        type: string
      signature:
        type: string
      timestamp:
        description: Block parameters
        type: integer
      transactions:
        type: string
    type: object
  softblocks.TransactionBatchMarker:
    enum:
      - end_of_block
      - end_of_preconf
    type: string
    x-enum-varnames:
      - BatchMarkerEOB
      - BatchMarkerEOP
  types.Header:
    properties:
      baseFeePerGas:
        allOf:
          - $ref: "#/definitions/big.Int"
        description: BaseFee was added by EIP-1559 and is ignored in legacy headers.
      blobGasUsed:
        description: BlobGasUsed was added by EIP-4844 and is ignored in legacy headers.
        type: integer
      difficulty:
        $ref: "#/definitions/big.Int"
      excessBlobGas:
        description:
          ExcessBlobGas was added by EIP-4844 and is ignored in legacy
          headers.
        type: integer
      extraData:
        items:
          type: integer
        type: array
      gasLimit:
        type: integer
      gasUsed:
        type: integer
      logsBloom:
        items:
          type: integer
        type: array
      miner:
        items:
          type: integer
        type: array
      mixHash:
        items:
          type: integer
        type: array
      nonce:
        items:
          type: integer
        type: array
      number:
        $ref: "#/definitions/big.Int"
      parentBeaconBlockRoot:
        description:
          ParentBeaconRoot was added by EIP-4788 and is ignored in legacy
          headers.
        items:
          type: integer
        type: array
      parentHash:
        items:
          type: integer
        type: array
      receiptsRoot:
        items:
          type: integer
        type: array
      requestsRoot:
        description: RequestsHash was added by EIP-7685 and is ignored in legacy headers.
        items:
          type: integer
        type: array
      sha3Uncles:
        items:
          type: integer
        type: array
      stateRoot:
        items:
          type: integer
        type: array
      timestamp:
        type: integer
      transactionsRoot:
        items:
          type: integer
        type: array
      withdrawalsRoot:
        description:
          WithdrawalsHash was added by EIP-4895 and is ignored in legacy
          headers.
        items:
          type: integer
        type: array
    type: object
info:
  contact:
    email: info@taiko.xyz
    name: API Support
    url: https://community.taiko.xyz/
  license:
    name: MIT
    url: https://github.com/taikoxyz/taiko-mono/blob/main/LICENSE.md
  termsOfService: http://swagger.io/terms/
  title: Taiko Soft Block Server API
  version: "1.0"
paths:
  /healthz:
    get:
      consumes:
        - application/json
      operationId: health-check
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get current server health status
  /softBlocks:
    delete:
      consumes:
        - application/json
      description: |-
        Remove all soft blocks from the blockchain beyond the specified block height,
        ensuring the latest block ID does not exceed the given height. This method will fail if
        the block with an ID one greater than the specified height is not a soft block. If the
        specified block height is greater than the latest soft block ID, the method will succeed
        without modifying the blockchain.
      parameters:
        - description: preconf blocks creation request body
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/softblocks.RemoveSoftBlocksRequestBody"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/softblocks.RemoveSoftBlocksResponseBody"
    post:
      consumes:
        - application/json
      description: |-
        Insert a group of transactions into a soft block for preconfirmation. If the group is the
        first for a block, a new soft block will be created. Otherwise, the transactions will
        be appended to the existing soft block. The API will fail if:
        1) the block is not soft
        2) block-level parameters are invalid or do not match the current soft blockâ€™s parameters
        3) the group ID is not exactly 1 greater than the previous one
        4) the last group of the block indicates no further transactions are allowed
      parameters:
        - description: preconf blocks creation request body
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/softblocks.BuildSoftBlockRequestBody"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/softblocks.BuildSoftBlockResponseBody"
swagger: "2.0"
