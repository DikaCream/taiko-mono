{
  "SharedAddressManagerImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3505,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__addresses",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))"
      },
      {
        "astId": 3509,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(bytes32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_address)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "SharedAddressManager": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3505,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__addresses",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))"
      },
      {
        "astId": 3509,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(bytes32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_address)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "BridgeImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1714,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reserved1",
        "offset": 0,
        "slot": "251",
        "type": "t_uint64"
      },
      {
        "astId": 1716,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "nextMessageId",
        "offset": 8,
        "slot": "251",
        "type": "t_uint64"
      },
      {
        "astId": 1722,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "messageStatus",
        "offset": 0,
        "slot": "252",
        "type": "t_mapping(t_bytes32,t_enum(Status)3330)"
      },
      {
        "astId": 1726,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__ctx",
        "offset": 0,
        "slot": "253",
        "type": "t_struct(Context)3365_storage"
      },
      {
        "astId": 1729,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reserved2",
        "offset": 0,
        "slot": "255",
        "type": "t_uint256"
      },
      {
        "astId": 1732,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reserved3",
        "offset": 0,
        "slot": "256",
        "type": "t_uint256"
      },
      {
        "astId": 1736,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "257",
        "type": "t_array(t_uint256)44_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)44_storage": {
        "encoding": "inplace",
        "label": "uint256[44]",
        "numberOfBytes": "1408",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Status)3330": {
        "encoding": "inplace",
        "label": "enum IBridge.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_enum(Status)3330)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => enum IBridge.Status)",
        "numberOfBytes": "32",
        "value": "t_enum(Status)3330"
      },
      "t_struct(Context)3365_storage": {
        "encoding": "inplace",
        "label": "struct IBridge.Context",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 3360,
            "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
            "label": "msgHash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 3362,
            "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
            "label": "from",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3364,
            "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
            "label": "srcChainId",
            "offset": 20,
            "slot": "1",
            "type": "t_uint64"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "Bridge": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1714,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reserved1",
        "offset": 0,
        "slot": "251",
        "type": "t_uint64"
      },
      {
        "astId": 1716,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "nextMessageId",
        "offset": 8,
        "slot": "251",
        "type": "t_uint64"
      },
      {
        "astId": 1722,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "messageStatus",
        "offset": 0,
        "slot": "252",
        "type": "t_mapping(t_bytes32,t_enum(Status)3330)"
      },
      {
        "astId": 1726,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__ctx",
        "offset": 0,
        "slot": "253",
        "type": "t_struct(Context)3365_storage"
      },
      {
        "astId": 1729,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reserved2",
        "offset": 0,
        "slot": "255",
        "type": "t_uint256"
      },
      {
        "astId": 1732,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__reserved3",
        "offset": 0,
        "slot": "256",
        "type": "t_uint256"
      },
      {
        "astId": 1736,
        "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "257",
        "type": "t_array(t_uint256)44_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)44_storage": {
        "encoding": "inplace",
        "label": "uint256[44]",
        "numberOfBytes": "1408",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Status)3330": {
        "encoding": "inplace",
        "label": "enum IBridge.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_enum(Status)3330)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => enum IBridge.Status)",
        "numberOfBytes": "32",
        "value": "t_enum(Status)3330"
      },
      "t_struct(Context)3365_storage": {
        "encoding": "inplace",
        "label": "struct IBridge.Context",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 3360,
            "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
            "label": "msgHash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 3362,
            "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
            "label": "from",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3364,
            "contract": "contracts/shared/bridge/Bridge.sol:Bridge",
            "label": "srcChainId",
            "offset": 20,
            "slot": "1",
            "type": "t_uint64"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ERC20VaultImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6419,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 8517,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "bridgedToCanonical",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_struct(CanonicalERC20)8495_storage)"
      },
      {
        "astId": 8524,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "canonicalToBridged",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
      },
      {
        "astId": 8529,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "btokenDenylist",
        "offset": 0,
        "slot": "303",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 8536,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "lastMigrationStart",
        "offset": 0,
        "slot": "304",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 8540,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "305",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(CanonicalERC20)8495_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ERC20Vault.CanonicalERC20)",
        "numberOfBytes": "32",
        "value": "t_struct(CanonicalERC20)8495_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanonicalERC20)8495_storage": {
        "encoding": "inplace",
        "label": "struct ERC20Vault.CanonicalERC20",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 8486,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "chainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 8488,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "addr",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8490,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "decimals",
            "offset": 28,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 8492,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8494,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ERC20Vault": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6419,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 8517,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "bridgedToCanonical",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_struct(CanonicalERC20)8495_storage)"
      },
      {
        "astId": 8524,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "canonicalToBridged",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
      },
      {
        "astId": 8529,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "btokenDenylist",
        "offset": 0,
        "slot": "303",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 8536,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "lastMigrationStart",
        "offset": 0,
        "slot": "304",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 8540,
        "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "305",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(CanonicalERC20)8495_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ERC20Vault.CanonicalERC20)",
        "numberOfBytes": "32",
        "value": "t_struct(CanonicalERC20)8495_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanonicalERC20)8495_storage": {
        "encoding": "inplace",
        "label": "struct ERC20Vault.CanonicalERC20",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 8486,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "chainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 8488,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "addr",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8490,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "decimals",
            "offset": 28,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 8492,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 8494,
            "contract": "contracts/shared/tokenvault/ERC20Vault.sol:ERC20Vault",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ERC721VaultImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6419,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 6261,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "bridgedToCanonical",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)"
      },
      {
        "astId": 6268,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "canonicalToBridged",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
      },
      {
        "astId": 6272,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "303",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 9586,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "351",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BaseNFTVault.CanonicalNFT)",
        "numberOfBytes": "32",
        "value": "t_struct(CanonicalNFT)6235_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanonicalNFT)6235_storage": {
        "encoding": "inplace",
        "label": "struct BaseNFTVault.CanonicalNFT",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 6228,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "chainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 6230,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "addr",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6232,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 6234,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ERC721Vault": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6419,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 6261,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "bridgedToCanonical",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)"
      },
      {
        "astId": 6268,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "canonicalToBridged",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
      },
      {
        "astId": 6272,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "303",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 9586,
        "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "351",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BaseNFTVault.CanonicalNFT)",
        "numberOfBytes": "32",
        "value": "t_struct(CanonicalNFT)6235_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanonicalNFT)6235_storage": {
        "encoding": "inplace",
        "label": "struct BaseNFTVault.CanonicalNFT",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 6228,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "chainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 6230,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "addr",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6232,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 6234,
            "contract": "contracts/shared/tokenvault/ERC721Vault.sol:ERC721Vault",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ERC1155VaultImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6419,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 6261,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "bridgedToCanonical",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)"
      },
      {
        "astId": 6268,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "canonicalToBridged",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
      },
      {
        "astId": 6272,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "303",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 16738,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "351",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 12545,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "401",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 7721,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "451",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BaseNFTVault.CanonicalNFT)",
        "numberOfBytes": "32",
        "value": "t_struct(CanonicalNFT)6235_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanonicalNFT)6235_storage": {
        "encoding": "inplace",
        "label": "struct BaseNFTVault.CanonicalNFT",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 6228,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "chainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 6230,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "addr",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6232,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 6234,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ERC1155Vault": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6419,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 6261,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "bridgedToCanonical",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)"
      },
      {
        "astId": 6268,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "canonicalToBridged",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))"
      },
      {
        "astId": 6272,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "303",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 16738,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "351",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 12545,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "401",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 7721,
        "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
        "label": "__gap",
        "offset": 0,
        "slot": "451",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_struct(CanonicalNFT)6235_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BaseNFTVault.CanonicalNFT)",
        "numberOfBytes": "32",
        "value": "t_struct(CanonicalNFT)6235_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CanonicalNFT)6235_storage": {
        "encoding": "inplace",
        "label": "struct BaseNFTVault.CanonicalNFT",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 6228,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "chainId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 6230,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "addr",
            "offset": 8,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6232,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 6234,
            "contract": "contracts/shared/tokenvault/ERC1155Vault.sol:ERC1155Vault",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "BridgedERC20": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 12566,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 12572,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "252",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 12574,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "253",
        "type": "t_uint256"
      },
      {
        "astId": 12576,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_name",
        "offset": 0,
        "slot": "254",
        "type": "t_string_storage"
      },
      {
        "astId": 12578,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "255",
        "type": "t_string_storage"
      },
      {
        "astId": 13158,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "256",
        "type": "t_array(t_uint256)45_storage"
      },
      {
        "astId": 6863,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "srcToken",
        "offset": 0,
        "slot": "301",
        "type": "t_address"
      },
      {
        "astId": 6865,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__srcDecimals",
        "offset": 20,
        "slot": "301",
        "type": "t_uint8"
      },
      {
        "astId": 6868,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "srcChainId",
        "offset": 0,
        "slot": "302",
        "type": "t_uint256"
      },
      {
        "astId": 6871,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "migratingAddress",
        "offset": 0,
        "slot": "303",
        "type": "t_address"
      },
      {
        "astId": 6874,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "migratingInbound",
        "offset": 20,
        "slot": "303",
        "type": "t_bool"
      },
      {
        "astId": 6878,
        "contract": "contracts/shared/tokenvault/BridgedERC20.sol:BridgedERC20",
        "label": "__gap",
        "offset": 0,
        "slot": "304",
        "type": "t_array(t_uint256)47_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)45_storage": {
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440",
        "base": "t_uint256"
      },
      "t_array(t_uint256)47_storage": {
        "encoding": "inplace",
        "label": "uint256[47]",
        "numberOfBytes": "1504",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "BridgedERC721": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 16738,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 14275,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_name",
        "offset": 0,
        "slot": "301",
        "type": "t_string_storage"
      },
      {
        "astId": 14277,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_symbol",
        "offset": 0,
        "slot": "302",
        "type": "t_string_storage"
      },
      {
        "astId": 14281,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_owners",
        "offset": 0,
        "slot": "303",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 14285,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_balances",
        "offset": 0,
        "slot": "304",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 14289,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "305",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 14295,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "306",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 15197,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "307",
        "type": "t_array(t_uint256)44_storage"
      },
      {
        "astId": 7502,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "srcToken",
        "offset": 0,
        "slot": "351",
        "type": "t_address"
      },
      {
        "astId": 7505,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "srcChainId",
        "offset": 0,
        "slot": "352",
        "type": "t_uint256"
      },
      {
        "astId": 7509,
        "contract": "contracts/shared/tokenvault/BridgedERC721.sol:BridgedERC721",
        "label": "__gap",
        "offset": 0,
        "slot": "353",
        "type": "t_array(t_uint256)48_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)44_storage": {
        "encoding": "inplace",
        "label": "uint256[44]",
        "numberOfBytes": "1408",
        "base": "t_uint256"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "BridgedERC1155": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 16738,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "251",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 11097,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_balances",
        "offset": 0,
        "slot": "301",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 11103,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "302",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 11105,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "_uri",
        "offset": 0,
        "slot": "303",
        "type": "t_string_storage"
      },
      {
        "astId": 12312,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "304",
        "type": "t_array(t_uint256)47_storage"
      },
      {
        "astId": 6636,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "srcToken",
        "offset": 0,
        "slot": "351",
        "type": "t_address"
      },
      {
        "astId": 6639,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "srcChainId",
        "offset": 0,
        "slot": "352",
        "type": "t_uint256"
      },
      {
        "astId": 6642,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "symbol",
        "offset": 0,
        "slot": "353",
        "type": "t_string_storage"
      },
      {
        "astId": 6645,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "name",
        "offset": 0,
        "slot": "354",
        "type": "t_string_storage"
      },
      {
        "astId": 6649,
        "contract": "contracts/shared/tokenvault/BridgedERC1155.sol:BridgedERC1155",
        "label": "__gap",
        "offset": 0,
        "slot": "355",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_array(t_uint256)47_storage": {
        "encoding": "inplace",
        "label": "uint256[47]",
        "numberOfBytes": "1504",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "SignalServiceImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5198,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "topBlockId",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_uint64))"
      },
      {
        "astId": 5203,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "isAuthorized",
        "offset": 0,
        "slot": "252",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5207,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "253",
        "type": "t_array(t_uint256)48_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint64)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_uint64,t_mapping(t_bytes32,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => mapping(bytes32 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint64)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "SignalService": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5198,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "topBlockId",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_uint64))"
      },
      {
        "astId": 5203,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "isAuthorized",
        "offset": 0,
        "slot": "252",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5207,
        "contract": "contracts/shared/signal/SignalService.sol:SignalService",
        "label": "__gap",
        "offset": 0,
        "slot": "253",
        "type": "t_array(t_uint256)48_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint64)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint64)",
        "numberOfBytes": "32",
        "value": "t_uint64"
      },
      "t_mapping(t_uint64,t_mapping(t_bytes32,t_uint64))": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => mapping(bytes32 => uint64))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint64)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "TaikoL2Impl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 684,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_blockhashes",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint256,t_bytes32)"
      },
      {
        "astId": 687,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "publicInputHash",
        "offset": 0,
        "slot": "252",
        "type": "t_bytes32"
      },
      {
        "astId": 690,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "parentGasExcess",
        "offset": 0,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 693,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "lastSyncedBlock",
        "offset": 8,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 695,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "parentTimestamp",
        "offset": 16,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 697,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "parentGasTarget",
        "offset": 24,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 700,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "l1ChainId",
        "offset": 0,
        "slot": "254",
        "type": "t_uint64"
      },
      {
        "astId": 704,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "255",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "TaikoL2": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 684,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "_blockhashes",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint256,t_bytes32)"
      },
      {
        "astId": 687,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "publicInputHash",
        "offset": 0,
        "slot": "252",
        "type": "t_bytes32"
      },
      {
        "astId": 690,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "parentGasExcess",
        "offset": 0,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 693,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "lastSyncedBlock",
        "offset": 8,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 695,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "parentTimestamp",
        "offset": 16,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 697,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "parentGasTarget",
        "offset": 24,
        "slot": "253",
        "type": "t_uint64"
      },
      {
        "astId": 700,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "l1ChainId",
        "offset": 0,
        "slot": "254",
        "type": "t_uint64"
      },
      {
        "astId": 704,
        "contract": "contracts/layer2/based/TaikoL2.sol:TaikoL2",
        "label": "__gap",
        "offset": 0,
        "slot": "255",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "RollupAddressManagerImpl": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3505,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__addresses",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))"
      },
      {
        "astId": 3509,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(bytes32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_address)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "RollupAddressManager": {
    "storage": [
      {
        "astId": 10905,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 10908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 15739,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10650,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 10770,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10543,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 10637,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3644,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "addressManager",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 3648,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3900,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__reentry",
        "offset": 0,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3902,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__paused",
        "offset": 1,
        "slot": "201",
        "type": "t_uint8"
      },
      {
        "astId": 3904,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "lastUnpausedAt",
        "offset": 2,
        "slot": "201",
        "type": "t_uint64"
      },
      {
        "astId": 3908,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3505,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__addresses",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))"
      },
      {
        "astId": 3509,
        "contract": "contracts/shared/common/AddressManager.sol:AddressManager",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_bytes32,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(bytes32 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_address)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "LibNetwork": {
    "storage": [],
    "types": {}
  },
  "RegularERC20": {
    "storage": [
      {
        "astId": 20288,
        "contract": "test/shared/token/RegularERC20.sol:RegularERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 20294,
        "contract": "test/shared/token/RegularERC20.sol:RegularERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 20296,
        "contract": "test/shared/token/RegularERC20.sol:RegularERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 20298,
        "contract": "test/shared/token/RegularERC20.sol:RegularERC20",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 20300,
        "contract": "test/shared/token/RegularERC20.sol:RegularERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}